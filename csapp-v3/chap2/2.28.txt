p89
2.28:

对于一个w位的无符号数x,其加法运算的相反数-x定义为
1. 当x>0时，pow(2,w)-x　2. 当x=0, 0

因此，当w为4时：

Hex Decimal Decimal Hex
0   0       0       0
5   5       11      B
8   8       8       8
D   13      3       3
F   15      1       1


p93
2.29:

对应w位的二进制补码的有符号整数x,y:
  -pow(2, w-1)<=x,y<=pow(2,w-1)-1

  Case1:  -pow(2,w)<=x+y<-pow(2,w-1), 此时的值不在范围内，为负溢出，
  值为x+y+pow(2,w) ==> [0, pow(2,w-1)), 即负＋负＝正
  Case2: -pow(2, w-1)<=x+y<0, 没有溢出
  Case3: 0<=x+y<pow(2,w-1), 没有溢出
  Case4: pow(2,w-1)<=x+y<pow(2,w), 为正溢出
  值为x+y-pow(2,w) ==> [-pow(2,w-1), 0), 即正＋正＝负

  判断是否溢出的条件：
  1. x>0&&y>0 && x+y<0
  2. x<0&&y<0 && x+y>0

  二进制补码的加法和无符号数的加法是一样操作的。
　二进制补码在位串上按无符号数相加，截去多余的位，再做有符号数解释。

因此：
对于w=5的x,y

   x        y       x+y    x+y补码加 Case
[10100]  [10001]  [100101]  [00101]  Case1
[11000]  [11000]  [110000]  [10000]  Case2
[10111]  [01000]  [11111]   [11111]  Case2
[00010]  [00101]  [00111]   [00111]  Case3
[01100]  [00100]  [10000]   [10000]  Case4
